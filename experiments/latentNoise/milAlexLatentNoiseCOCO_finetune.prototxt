name: "FCN-AlexNet"
layer {
  name: "data" type: "MILData" top: "data" top: "label"
  mil_data_param {
    images_per_batch: 1 n_classes: 1000
    
    label_file: "./data/labels_captions_coco_vocabS1k_train.h5"
    source: "./data/ids_captions_coco_vocabS1k_train.txt"
    randomize: true
    
    root_dir: "./data/coco/images/train2014"
    ext: "jpg"
  }
  transform_param {
    mirror: true crop_size: 565
    mean_value: 103.939 mean_value: 116.779  mean_value: 123.68
  }
  include: { phase: TRAIN }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 96
    kernel_size: 11
    stride: 4
    pad: 100
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6-conv"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6-conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 4096
    kernel_size: 6
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6-conv"
  top: "fc6-conv"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6-conv"
  top: "fc6-conv"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7-conv"
  type: "Convolution"
  bottom: "fc6-conv"
  top: "fc7-conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_experiments: 4096
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7-conv"
  top: "fc7-conv"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7-conv"
  top: "fc7-conv"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_coco" type: "Convolution" bottom: "fc7-conv" top: "fc8-conv"
  param{ lr_mult: 10 decay_mult: 1 }
  param{ lr_mult: 20 decay_mult: 0 }
  convolution_param {
    num_experiments: 1000 kernel_size: 1
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: -6.58 }
  }
}
layer { name: "sigmoid" type: "Sigmoid" bottom: "fc8-conv" top:
"fc8-conv-sigmoid" }

layer{
  name: "mil" type: "MIL" bottom: "fc8-conv-sigmoid" top: "mil"
  mil_param{ type: NOR }
}
layer {
    name: "fc7-conv-pool"
    top: "fc7-conv-pool"
    bottom: "fc7-conv"
    type: "Pooling"
    pooling_param {
        pool: AVE
        kernel_size: 18
        stride: 1
    }
}
layer {
  name: "q00" type: "Convolution" bottom: "fc7-conv-pool" top: "q00-conv"
  param{ lr_mult: 10 decay_mult: 1 }
  param{ lr_mult: 20 decay_mult: 1 }
  convolution_param {
    num_experiments: 1000 kernel_size: 1
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: -6.58 }
  }
}
layer {
  name: "q01" type: "Convolution" bottom: "fc7-conv-pool" top: "q01-conv"
  param{ lr_mult: 10 decay_mult: 1 }
  param{ lr_mult: 20 decay_mult: 1 }
  convolution_param {
    num_experiments: 1000 kernel_size: 1
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: -9.87 }
  }
}
layer {
  name: "q10" type: "Convolution" bottom: "fc7-conv-pool" top: "q10-conv"
  param{ lr_mult: 10 decay_mult: 1 }
  param{ lr_mult: 20 decay_mult: 1 }
  convolution_param {
    num_experiments: 1000 kernel_size: 1
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: -9.87 }
  }
}
layer {
  name: "q11" type: "Convolution" bottom: "fc7-conv-pool" top: "q11-conv"
  param{ lr_mult: 10 decay_mult: 1 }
  param{ lr_mult: 20 decay_mult: 1 }
  convolution_param {
    num_experiments: 1000 kernel_size: 1
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: -6.58 }
  }
}

layer{
    name: "qdata_raw"
    top: "qdata_raw"
    bottom: "q00-conv"
    bottom: "q01-conv"
    bottom: "q10-conv"
    bottom: "q11-conv"
    type: "Concat"
    concat_param {
        axis: 2
    }
}

layer {
    name: "qdata_smax"
    type: "Softmax"
    bottom: "qdata_raw"
    top: "qdata_smax"
    softmax_param {
        axis: 2
    }
}
layer {
    name: "qconds"
    type: "JointToConditional"
    bottom: "qdata_smax"
    top: "qconds00"
    top: "qconds01"
    top: "qconds10"
    top: "qconds11"
}

layer {
    name: "noisy_comb_image"
    top: "noisy_comb_image"
    type: "Python"
    bottom: "mil"
    bottom: "qconds00"
    bottom: "qconds01"
    bottom: "qconds10"
    bottom: "qconds11"

    python_param {
        module: "python_layers.noisy_comb_image_layer"
        layer: "NoisyCombImageLayer"
        param_str: "{}"
    }
}

layer { name: "loss" type: "CrossEntropyLoss" bottom: "noisy_comb_image" bottom: "label"
loss_weight: 20 }
